import cgen as C
test = C.cgen('test.c')
test.code.append(C.sysinclude('stdio.h'))
test.code.append(C.blank())
test.code.append(C.function('main', 'int').add_param(C.variable('', '')))
body = C.block(innerIndent=3)
body.append(C.statement(C.variable('choice, num, i', 'int')))
body.append(C.statement(C.variable('fact', 'unsigned long int')))
body.append(C.line(C.fcall('while').add_arg(r'1')))
body1 = C.block(innerIndent=3)
body1.append(C.statement(C.fcall('printf').add_arg(r'"1. Factorial \n"')))
body1.append(C.statement(C.fcall('printf').add_arg(r'"2. Prime \n"')))
body1.append(C.statement(C.fcall('printf').add_arg(r'"3. Odd\\Even \n"')))
body1.append(C.statement(C.fcall('printf').add_arg(r'"4. Exit \n"')))
body1.append(C.statement(C.fcall('printf').add_arg(r'"Enter your choice: "')))
body1.append(C.statement(C.fcall('scanf').add_arg(r'"%d"').add_arg(r'&choice')))
body1.append(C.line(C.fcall('switch').add_arg(r'choice')))
body2 = C.block(innerIndent=3)
body2.append(C.line('case 1:'))
body3 = C.block(innerIndent=3)
body3.append(C.statement(C.fcall('printf').add_arg(r'"Enter number: \n"')))
body3.append(C.statement(C.fcall('scanf').add_arg(r'"%d"').add_arg(r'&num')))
body3.append(C.statement('fact = 1'))
body3.append(C.line(C.fcall('for').add_arg(r'i = 1; i <= num; i++')))
body3.append(C.statement('fact = fact * i'))
body3.append(C.statement(C.fcall('printf').add_arg(r'"\n\nFactorial of %d is = %lu\n\n\n"').add_arg(r'num').add_arg(r'fact')))
body3.append(C.statement('break'))
body2.code.append(body3)
body2.append(C.line('case 2:'))
body4 = C.block(innerIndent=3)
body4.append(C.statement(C.fcall('printf').add_arg(r'"Enter number: \n"')))
body4.append(C.statement(C.fcall('scanf').add_arg(r'"%d"').add_arg(r'&num')))
body4.append(C.line(C.fcall('if').add_arg(r'num == 1')))
body4.append(C.statement(C.fcall('printf').add_arg(r'"\n1 is neither prime nor composite\n\n"')))
body4.append(C.line(C.fcall('for').add_arg(r'i = 2; i < num; i++')))
body4.append(C.line(C.fcall('if').add_arg(r'num%i == 0')))
body4.append(C.statement(C.fcall('printf').add_arg(r'"\n%d is not a prime number\n\n"').add_arg(r'num')))
body4.append(C.statement('break'))
body4.append(C.line(C.comment(r'Not divisible by any other number other than 1 and itself')))
body4.append(C.line(C.fcall('if').add_arg(r'i == num')))
body4.append(C.statement(C.fcall('printf').add_arg(r'"\n\n%d is a prime number\n\n"').add_arg(r'num')))
body4.append(C.statement('break'))
body2.code.append(body4)
body2.append(C.line('case 3:'))
body5 = C.block(innerIndent=3)
body5.append(C.statement(C.fcall('printf').add_arg(r'"Enter number: \n"')))
body5.append(C.statement(C.fcall('scanf').add_arg(r'"%d"').add_arg(r'&num')))
body5.append(C.line(C.fcall('if').add_arg(r'num%2 == 0')))
body5.append(C.statement(C.fcall('printf').add_arg(r'"\n\n%d is an even number\n\n"').add_arg(r'num')))
body5.append(C.line('else'))
body5.append(C.statement(C.fcall('printf').add_arg(r'"\n\n%d is an odd number\n\n"').add_arg(r'num')))
body5.append(C.statement('break'))
body2.code.append(body5)
body2.append(C.line('case 4:'))
body6 = C.block(innerIndent=3)
body6.append(C.statement(C.fcall('exit').add_arg(r'0')))
body2.code.append(body6)
body1.code.append(body2)
body.code.append(body1)
body.append(C.statement('return 0'))
test.code.append(body)
print(str(test))